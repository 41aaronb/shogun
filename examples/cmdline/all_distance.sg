% Explicit examples on how to use the different distances;


%
% real features
%

% Euclidian Distance
%disp('EuclidianDistance');
set_distance EUCLIDIAN REAL

set_features TRAIN ../data/fm_train_real.dat
init_distance TRAIN
dm_train.txt = get_distance_matrix

set_features TEST ../data/fm_test_real.dat
init_distance TEST
dm_test.txt = get_distance_matrix


% Canberra Metric
%disp('CanberraMetric');
set_distance CANBERRA REAL

set_features TRAIN ../data/fm_train_real.dat
init_distance TRAIN
dm_train.txt = get_distance_matrix

set_features TEST ../data/fm_test_real.dat
init_distance TEST
dm_test.txt = get_distance_matrix


% Chebyshew Metric
%disp('ChebyshewMetric');
set_distance CHEBYSHEW REAL

set_features TRAIN ../data/fm_train_real.dat
init_distance TRAIN
dm_train.txt = get_distance_matrix

set_features TEST ../data/fm_test_real.dat
init_distance TEST
dm_test.txt = get_distance_matrix


% Geodesic Metric
%disp('GeodesicMetric');
set_distance GEODESIC REAL

set_features TRAIN ../data/fm_train_real.dat
init_distance TRAIN
dm_train.txt = get_distance_matrix

set_features TEST ../data/fm_test_real.dat
init_distance TEST
dm_test.txt = get_distance_matrix


% Jensen Metric
%disp('JensenMetric');
set_distance JENSEN REAL

set_features TRAIN ../data/fm_train_real.dat
init_distance TRAIN
dm_train.txt = get_distance_matrix

set_features TEST ../data/fm_test_real.dat
init_distance TEST
dm_test.txt = get_distance_matrix


% Manhattan Metric
%disp('ManhattanMetric');
set_distance MANHATTAN REAL

set_features TRAIN ../data/fm_train_real.dat
init_distance TRAIN
dm_train.txt = get_distance_matrix

set_features TEST ../data/fm_test_real.dat
init_distance TEST
dm_test.txt = get_distance_matrix


% Minkowski Metric
%disp('MinkowskiMetric');
set_distance MINKOWSKI REAL 3

set_features TRAIN ../data/fm_train_real.dat
init_distance TRAIN
dm_train.txt = get_distance_matrix

set_features TEST ../data/fm_test_real.dat
init_distance TEST
dm_test.txt = get_distance_matrix


%
% complex string features;
%

order=3;
gap=0;
reverse='n'; % bit silly to not use boolean, set 'r' to yield true

% CanberraWord Distance
%disp('CanberraWordDistance');

set_distance CANBERRA WORD
add_preproc SORTWORDSTRING

set_features TRAIN ../data/fm_train_dna.dat DNA
convert TRAIN STRING CHAR STRING WORD 3 2 0 n
attach_preproc TRAIN
init_distance TRAIN
dm_train = get_distance_matrix

set_features TEST ../data/fm_test_dna.dat DNA
convert TEST STRING CHAR STRING WORD 3 2 0 n
attach_preproc TEST
init_distance TEST
dm_test = get_distance_matrix


% HammingWord Distance
%disp('HammingWordDistance');

set_distance HAMMING WORD
add_preproc SORTWORDSTRING

set_features TRAIN ../data/fm_train_dna.dat DNA
convert TRAIN STRING CHAR STRING WORD 3 2 0 n
attach_preproc TRAIN
init_distance TRAIN
dm_train = get_distance_matrix

set_features TEST ../data/fm_test_dna.dat DNA
convert TEST STRING CHAR STRING WORD 3 2 0 n
attach_preproc TEST
init_distance TEST
dm_test = get_distance_matrix


% ManhattanWord Distance
%disp('ManhattanWordDistance');

set_distance MANHATTAN WORD
add_preproc SORTWORDSTRING

set_features TRAIN ../data/fm_train_dna.dat DNA
convert TRAIN STRING CHAR STRING WORD 3 2 0 n
attach_preproc TRAIN
init_distance TRAIN
dm_train = get_distance_matrix

set_features TEST ../data/fm_test_dna.dat DNA
convert TEST STRING CHAR STRING WORD 3 2 0 n
attach_preproc TEST
init_distance TEST
dm_test = get_distance_matrix

