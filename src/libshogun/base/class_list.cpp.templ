/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * Written (W) 2009 Soeren Sonnenburg
 * Copyright (C) 2009 Fraunhofer Institute FIRST and Max-Planck-Society
 */

#include "lib/common.h"
#include "base/class_list.h"

#include <string.h>

REPLACE includes THIS

using namespace shogun;

REPLACE definitions THIS

typedef CSGSerializable* (*new_sgserializable_t)(void);
typedef struct {
	const char* class_name;
	new_sgserializable_t new_sgserializable;
} class_list_entry_t;

static class_list_entry_t class_list[] = {
REPLACE structs THIS
	{class_name: NULL, new_sgserializable: NULL}
};

CSGSerializable*
shogun::new_sgserializable(const char* sgserializable_name)
{
	for (class_list_entry_t* i=class_list; i->class_name != NULL;
		 i++)
		if (strcmp(i->class_name, sgserializable_name) == 0)
			return i->new_sgserializable();

	return NULL;
}
