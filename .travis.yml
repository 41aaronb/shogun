sudo: required
language: cpp
cache: ccache
notifications:
  email: false
  irc:
    channels:
      - "irc.freenode.org#shogun"
    on_success: change
    on_failure: always
    template:
      - "it's %{author}'s turn to pay the next round of drinks for the massacre he caused in %{repository}: %{build_url}"
matrix:
  fast_finish: true
  include:
    - compiler: gcc
      services: docker
    - compiler: clang
      services: docker
    - compiler: gcc
      services: docker
      env:
        - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON -DENABLE_CCACHE=OFF"
        - CODE_COVERAGE=1
    - compiler: clang
      services: docker
      env:
        - CMAKE_OPTIONS="-DPythonModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
        - CC=clang
        - CXX=clang++
    - compiler: clang
      services: docker
      env:
        - CMAKE_OPTIONS="-DRubyModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
        - CC=clang
        - CXX=clang++
    - compiler: clang
      services: docker
      env:
        - CMAKE_OPTIONS="-DJavaModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
        - CC=clang
        - CXX=clang++
    - compiler: clang
      services: docker
      env:
        - CMAKE_OPTIONS="-DCSharpModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
        - CC=clang
        - CXX=clang++
    - compiler: clang
      services: docker
      env:
        - CMAKE_OPTIONS="-DLuaModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
        - CC=clang
        - CXX=clang++
    - compiler: gcc
      services: docker
      env:
        - CMAKE_OPTIONS="-DOctaveModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
        - OCTAVE_MODULAR=true
    - compiler: clang
      services: docker
      env:
        - CMAKE_OPTIONS="-DRModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
        - CC=clang
        - CXX=clang++
    - compiler: clang
      services: docker
      env:
        - CMAKE_OPTIONS="-DScalaModular=ON -DTRAVIS_DISABLE_UNIT_TESTS=ON -DTRAVIS_DISABLE_LIBSHOGUN_TESTS=ON"
        - CC=clang
        - CXX=clang++
before_install:
  - docker pull shogun/shogun-dev
  - perl -pe 's/\$(\w+)/$ENV{$1}/g' configs/shogun-sdk/env.list.in > env.list
  - docker run -t -d -P --env-file env.list --name devenv -v $HOME/.ccache:/root/.ccache -v $PWD:/opt/shogun shogun/shogun-dev /bin/sh -c "mkdir /opt/shogun/build;bash"
before_script:
  - docker exec -t devenv /bin/sh -c "cd /opt/shogun/build; cmake -DCMAKE_INSTALL_PREFIX=$HOME/shogun-build -DENABLE_TESTING=ON $CMAKE_OPTIONS .."
script:
  - |
    if [ $CC == "gcc" ] && [ -z $OCTAVE_MODULAR ]; then
      docker exec -t devenv /bin/sh -c "cd /opt/shogun/;  if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then ./scripts/check_format.sh "$TRAVIS_PULL_REQUEST_BRANCH" "$TRAVIS_BRANCH"; fi"
    fi
  - docker exec -t devenv /bin/sh -c "cd /opt/shogun/build; make -j2"
  - docker exec -t devenv /bin/sh -c "cd /opt/shogun/build; make install"
  - docker exec -t devenv /bin/sh -c "cd /opt/shogun/build; ctest --output-on-failure -j 2"
after_success:
  - if [ $CODE_COVERAGE ] ; then
      docker exec -t devenv /bin/sh -c "cd /opt/shogun/build; lcov --directory src/shogun/ --capture --output-file all_coverage.info; lcov --remove all_coverage.info '/usr/*' > coverage.info; rm all_coverage.info; codecov -X gcov"
    fi
